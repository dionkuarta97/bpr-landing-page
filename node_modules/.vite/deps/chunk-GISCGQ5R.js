import {
  require_classnames,
  require_dist,
  require_objectsToString,
  require_prop_types,
  require_theme2 as require_theme,
  require_typography
} from "./chunk-YK3CUNCF.js";
import {
  require_react
} from "./chunk-Q554TORF.js";
import {
  __commonJS
} from "./chunk-4B2QHNJT.js";

// node_modules/@material-tailwind/react/utils/findMatch.js
var require_findMatch = __commonJS({
  "node_modules/@material-tailwind/react/utils/findMatch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    Object.defineProperty(exports, "default", { enumerable: true, get: function() {
      return _default;
    } });
    function findMatch(data, find, defaultValue) {
      var founded = data.findIndex(function(el) {
        return el === find;
      });
      return founded >= 0 ? find : defaultValue;
    }
    var _default = findMatch;
  }
});

// node_modules/@material-tailwind/react/components/Typography/index.js
var require_Typography = __commonJS({
  "node_modules/@material-tailwind/react/components/Typography/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, { enumerable: true, get: all[name] });
    }
    _export(exports, { Typography: function() {
      return Typography;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _classnames = _interopRequireDefault(require_classnames());
    var _tailwindMerge = require_dist();
    var _findMatch = _interopRequireDefault(require_findMatch());
    var _objectsToString = _interopRequireDefault(require_objectsToString());
    var _theme = require_theme();
    var _typography = require_typography();
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys2 = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys2.forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpreadProps(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
      return target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    var Typography = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, textGradient = _param.textGradient, as = _param.as, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "color", "textGradient", "as", "className", "children"]);
      var typography = (0, _theme.useTheme)().typography;
      var defaultProps = typography.defaultProps, valid = typography.valid, styles = typography.styles;
      var variants = styles.variants, colors = styles.colors, gradient = styles.textGradient;
      variant = variant !== null && variant !== void 0 ? variant : defaultProps.variant;
      color = color !== null && color !== void 0 ? color : defaultProps.color;
      textGradient = textGradient || defaultProps.textGradient;
      as = as !== null && as !== void 0 ? as : void 0;
      className = className !== null && className !== void 0 ? className : defaultProps.className;
      var typographyVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "paragraph")]);
      var typographyColor = colors[(0, _findMatch.default)(valid.colors, color, "inherit")];
      var gradientTextClasses = (0, _objectsToString.default)(gradient);
      var classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(typographyVariant, _defineProperty({}, typographyColor.color, !textGradient), _defineProperty({}, gradientTextClasses, textGradient), _defineProperty({}, typographyColor.gradient, textGradient)), className);
      var template;
      switch (variant) {
        case "h1":
          template = _react.default.createElement(as || "h1", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h2":
          template = _react.default.createElement(as || "h2", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h3":
          template = _react.default.createElement(as || "h3", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h4":
          template = _react.default.createElement(as || "h4", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h5":
          template = _react.default.createElement(as || "h5", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h6":
          template = _react.default.createElement(as || "h6", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "lead":
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "paragraph":
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "small":
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        default:
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
      }
      return template;
    });
    Typography.propTypes = { variant: _propTypes.default.oneOf(_typography.propTypesVariant), color: _propTypes.default.oneOf(_typography.propTypesColor), as: _typography.propTypesAs, textGradient: _typography.propTypesTextGradient, className: _typography.propTypesClassName, children: _typography.propTypesChildren };
    Typography.displayName = "MaterialTailwind.Typography";
    var _default = Typography;
  }
});

export {
  require_findMatch,
  require_Typography
};
//# sourceMappingURL=chunk-GISCGQ5R.js.map
